var t=Object.defineProperty,e=(e,i,r)=>((e,i,r)=>i in e?t(e,i,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[i]=r)(e,"symbol"!=typeof i?i+"":i,r);const i={33434:"ExposureTime",33437:"FNumber",34850:"ExposureProgram",34852:"SpectralSensitivity",34855:"ISOSpeedRatings",34856:"OECF",34864:"SensitivityType",34865:"StandardOutputSensitivity",34866:"RecommendedExposureIndex",34867:"ISOSpeed",34868:"ISOSpeedLatitudeyyy",34869:"ISOSpeedLatitudezzz",36864:"ExifVersion",36867:"DateTimeOriginal",36868:"DateTimeDigitized",37121:"ComponentsConfiguration",37122:"CompressedBitsPerPixel",37377:"ShutterSpeedValue",37378:"ApertureValue",37379:"BrightnessValue",37380:"ExposureBiasValue",37381:"MaxApertureValue",37382:"SubjectDistance",37383:"MeteringMode",37384:"LightSource",37385:"Flash",37386:"FocalLength",37396:"SubjectArea",37500:"MakerNote",37510:"UserComment",37520:"SubsecTime",37521:"SubsecTimeOriginal",37522:"SubsecTimeDigitized",40960:"FlashpixVersion",40961:"ColorSpace",40962:"PixelXDimension",40963:"PixelYDimension",40964:"RelatedSoundFile",41483:"FlashEnergy",41484:"SpatialFrequencyResponse",41486:"FocalPlaneXResolution",41487:"FocalPlaneYResolution",41488:"FocalPlaneResolutionUnit",41492:"SubjectLocation",41493:"ExposureIndex",41495:"SensingMethod",41728:"FileSource",41729:"SceneType",41730:"CFAPattern",41985:"CustomRendered",41986:"ExposureMode",41987:"WhiteBalance",41988:"DigitalZoomRatio",41989:"FocalLengthIn35mmFilm",41990:"SceneCaptureType",41991:"GainControl",41992:"Contrast",41993:"Saturation",41994:"Sharpness",41995:"DeviceSettingDescription",41996:"SubjectDistanceRange",42016:"ImageUniqueID",42032:"CameraOwnerName",42033:"BodySerialNumber",42034:"LensSpecification",42035:"LensMake",42036:"LensModel",42037:"LensSerialNumber",42240:"Gamma"},r={};for(const qt in i)r[i[qt]]=Number(qt);const n=Object.freeze(Object.defineProperty({__proto__:null,tagsById:i,tagsByName:r},Symbol.toStringTag,{value:"Module"})),s={0:"GPSVersionID",1:"GPSLatitudeRef",2:"GPSLatitude",3:"GPSLongitudeRef",4:"GPSLongitude",5:"GPSAltitudeRef",6:"GPSAltitude",7:"GPSTimeStamp",8:"GPSSatellites",9:"GPSStatus",10:"GPSMeasureMode",11:"GPSDOP",12:"GPSSpeedRef",13:"GPSSpeed",14:"GPSTrackRef",15:"GPSTrack",16:"GPSImgDirectionRef",17:"GPSImgDirection",18:"GPSMapDatum",19:"GPSDestLatitudeRef",20:"GPSDestLatitude",21:"GPSDestLongitudeRef",22:"GPSDestLongitude",23:"GPSDestBearingRef",24:"GPSDestBearing",25:"GPSDestDistanceRef",26:"GPSDestDistance",27:"GPSProcessingMethod",28:"GPSAreaInformation",29:"GPSDateStamp",30:"GPSDifferential",31:"GPSHPositioningError"},a={};for(const qt in s)a[s[qt]]=Number(qt);const o=Object.freeze(Object.defineProperty({__proto__:null,tagsById:s,tagsByName:a},Symbol.toStringTag,{value:"Module"})),l={254:"NewSubfileType",255:"SubfileType",256:"ImageWidth",257:"ImageLength",258:"BitsPerSample",259:"Compression",262:"PhotometricInterpretation",263:"Threshholding",264:"CellWidth",265:"CellLength",266:"FillOrder",270:"ImageDescription",271:"Make",272:"Model",273:"StripOffsets",274:"Orientation",277:"SamplesPerPixel",278:"RowsPerStrip",279:"StripByteCounts",280:"MinSampleValue",281:"MaxSampleValue",282:"XResolution",283:"YResolution",284:"PlanarConfiguration",288:"FreeOffsets",289:"FreeByteCounts",290:"GrayResponseUnit",291:"GrayResponseCurve",296:"ResolutionUnit",305:"Software",306:"DateTime",315:"Artist",316:"HostComputer",320:"ColorMap",338:"ExtraSamples",33432:"Copyright",269:"DocumentName",285:"PageName",286:"XPosition",287:"YPosition",292:"T4Options",293:"T6Options",297:"PageNumber",301:"TransferFunction",317:"Predictor",318:"WhitePoint",319:"PrimaryChromaticities",321:"HalftoneHints",322:"TileWidth",323:"TileLength",324:"TileOffsets",325:"TileByteCounts",326:"BadFaxLines",327:"CleanFaxData",328:"ConsecutiveBadFaxLines",330:"SubIFDs",332:"InkSet",333:"InkNames",334:"NumberOfInks",336:"DotRange",337:"TargetPrinter",339:"SampleFormat",340:"SMinSampleValue",341:"SMaxSampleValue",342:"TransferRange",343:"ClipPath",344:"XClipPathUnits",345:"YClipPathUnits",346:"Indexed",347:"JPEGTables",351:"OPIProxy",400:"GlobalParametersIFD",401:"ProfileType",402:"FaxProfile",403:"CodingMethods",404:"VersionYear",405:"ModeNumber",433:"Decode",434:"DefaultImageColor",512:"JPEGProc",513:"JPEGInterchangeFormat",514:"JPEGInterchangeFormatLength",515:"JPEGRestartInterval",517:"JPEGLosslessPredictors",518:"JPEGPointTransforms",519:"JPEGQTables",520:"JPEGDCTables",521:"JPEGACTables",529:"YCbCrCoefficients",530:"YCbCrSubSampling",531:"YCbCrPositioning",532:"ReferenceBlackWhite",559:"StripRowCounts",700:"XMP",32781:"ImageID",34732:"ImageLayer",32932:"WangAnnotatio",33445:"MDFileTag",33446:"MDScalePixel",33447:"MDColorTable",33448:"MDLabName",33449:"MDSampleInfo",33450:"MDPrepDate",33451:"MDPrepTime",33452:"MDFileUnits",33550:"ModelPixelScaleTag",33723:"IPTC",33918:"INGRPacketDataTag",33919:"INGRFlagRegisters",33920:"IrasBTransformationMatrix",33922:"ModelTiepointTag",34264:"ModelTransformationTag",34377:"Photoshop",34665:"ExifIFD",34675:"ICCProfile",34735:"GeoKeyDirectoryTag",34736:"GeoDoubleParamsTag",34737:"GeoAsciiParamsTag",34853:"GPSIFD",34908:"HylaFAXFaxRecvParams",34909:"HylaFAXFaxSubAddress",34910:"HylaFAXFaxRecvTime",37724:"ImageSourceData",40965:"InteroperabilityIFD",42112:"GDAL_METADATA",42113:"GDAL_NODATA",50215:"OceScanjobDescription",50216:"OceApplicationSelector",50217:"OceIdentificationNumber",50218:"OceImageLogicCharacteristics",50706:"DNGVersion",50707:"DNGBackwardVersion",50708:"UniqueCameraModel",50709:"LocalizedCameraModel",50710:"CFAPlaneColor",50711:"CFALayout",50712:"LinearizationTable",50713:"BlackLevelRepeatDim",50714:"BlackLevel",50715:"BlackLevelDeltaH",50716:"BlackLevelDeltaV",50717:"WhiteLevel",50718:"DefaultScale",50719:"DefaultCropOrigin",50720:"DefaultCropSize",50721:"ColorMatrix1",50722:"ColorMatrix2",50723:"CameraCalibration1",50724:"CameraCalibration2",50725:"ReductionMatrix1",50726:"ReductionMatrix2",50727:"AnalogBalance",50728:"AsShotNeutral",50729:"AsShotWhiteXY",50730:"BaselineExposure",50731:"BaselineNoise",50732:"BaselineSharpness",50733:"BayerGreenSplit",50734:"LinearResponseLimit",50735:"CameraSerialNumber",50736:"LensInfo",50737:"ChromaBlurRadius",50738:"AntiAliasStrength",50740:"DNGPrivateData",50741:"MakerNoteSafety",50778:"CalibrationIlluminant1",50779:"CalibrationIlluminant2",50780:"BestQualityScale",50784:"AliasLayerMetadata"},h={};for(const qt in l)h[l[qt]]=Number(qt);const f=Object.freeze(Object.defineProperty({__proto__:null,tagsById:l,tagsByName:h},Symbol.toStringTag,{value:"Module"}));function d(t,e="utf8"){return new TextDecoder(e).decode(t)}const u=new TextEncoder;const c=(()=>{const t=new Uint8Array(4);return!((new Uint32Array(t.buffer)[0]=1)&t[0])})(),g={int8:globalThis.Int8Array,uint8:globalThis.Uint8Array,int16:globalThis.Int16Array,uint16:globalThis.Uint16Array,int32:globalThis.Int32Array,uint32:globalThis.Uint32Array,uint64:globalThis.BigUint64Array,int64:globalThis.BigInt64Array,float32:globalThis.Float32Array,float64:globalThis.Float64Array};class m{constructor(t=8192,i={}){e(this,"buffer"),e(this,"byteLength"),e(this,"byteOffset"),e(this,"length"),e(this,"offset"),e(this,"lastWrittenByte"),e(this,"littleEndian"),e(this,"_data"),e(this,"_mark"),e(this,"_marks");let r=!1;"number"==typeof t?t=new ArrayBuffer(t):(r=!0,this.lastWrittenByte=t.byteLength);const n=i.offset?i.offset>>>0:0,s=t.byteLength-n;let a=n;(ArrayBuffer.isView(t)||t instanceof m)&&(t.byteLength!==t.buffer.byteLength&&(a=t.byteOffset+n),t=t.buffer),this.lastWrittenByte=r?s:0,this.buffer=t,this.length=s,this.byteLength=s,this.byteOffset=a,this.offset=0,this.littleEndian=!0,this._data=new DataView(this.buffer,a,s),this._mark=0,this._marks=[]}available(t=1){return this.offset+t<=this.length}isLittleEndian(){return this.littleEndian}setLittleEndian(){return this.littleEndian=!0,this}isBigEndian(){return!this.littleEndian}setBigEndian(){return this.littleEndian=!1,this}skip(t=1){return this.offset+=t,this}back(t=1){return this.offset-=t,this}seek(t){return this.offset=t,this}mark(){return this._mark=this.offset,this}reset(){return this.offset=this._mark,this}pushMark(){return this._marks.push(this.offset),this}popMark(){const t=this._marks.pop();if(void 0===t)throw new Error("Mark stack empty");return this.seek(t),this}rewind(){return this.offset=0,this}ensureAvailable(t=1){if(!this.available(t)){const e=2*(this.offset+t),i=new Uint8Array(e);i.set(new Uint8Array(this.buffer)),this.buffer=i.buffer,this.length=e,this.byteLength=e,this._data=new DataView(this.buffer)}return this}readBoolean(){return 0!==this.readUint8()}readInt8(){return this._data.getInt8(this.offset++)}readUint8(){return this._data.getUint8(this.offset++)}readByte(){return this.readUint8()}readBytes(t=1){return this.readArray(t,"uint8")}readArray(t,e){const i=g[e].BYTES_PER_ELEMENT*t,r=this.byteOffset+this.offset,n=this.buffer.slice(r,r+i);if(this.littleEndian===c&&"uint8"!==e&&"int8"!==e){const t=new Uint8Array(this.buffer.slice(r,r+i));t.reverse();const n=new g[e](t.buffer);return this.offset+=i,n.reverse(),n}const s=new g[e](n);return this.offset+=i,s}readInt16(){const t=this._data.getInt16(this.offset,this.littleEndian);return this.offset+=2,t}readUint16(){const t=this._data.getUint16(this.offset,this.littleEndian);return this.offset+=2,t}readInt32(){const t=this._data.getInt32(this.offset,this.littleEndian);return this.offset+=4,t}readUint32(){const t=this._data.getUint32(this.offset,this.littleEndian);return this.offset+=4,t}readFloat32(){const t=this._data.getFloat32(this.offset,this.littleEndian);return this.offset+=4,t}readFloat64(){const t=this._data.getFloat64(this.offset,this.littleEndian);return this.offset+=8,t}readBigInt64(){const t=this._data.getBigInt64(this.offset,this.littleEndian);return this.offset+=8,t}readBigUint64(){const t=this._data.getBigUint64(this.offset,this.littleEndian);return this.offset+=8,t}readChar(){return String.fromCharCode(this.readInt8())}readChars(t=1){let e="";for(let i=0;i<t;i++)e+=this.readChar();return e}readUtf8(t=1){return d(this.readBytes(t))}decodeText(t=1,e="utf8"){return d(this.readBytes(t),e)}writeBoolean(t){return this.writeUint8(t?255:0),this}writeInt8(t){return this.ensureAvailable(1),this._data.setInt8(this.offset++,t),this._updateLastWrittenByte(),this}writeUint8(t){return this.ensureAvailable(1),this._data.setUint8(this.offset++,t),this._updateLastWrittenByte(),this}writeByte(t){return this.writeUint8(t)}writeBytes(t){this.ensureAvailable(t.length);for(let e=0;e<t.length;e++)this._data.setUint8(this.offset++,t[e]);return this._updateLastWrittenByte(),this}writeInt16(t){return this.ensureAvailable(2),this._data.setInt16(this.offset,t,this.littleEndian),this.offset+=2,this._updateLastWrittenByte(),this}writeUint16(t){return this.ensureAvailable(2),this._data.setUint16(this.offset,t,this.littleEndian),this.offset+=2,this._updateLastWrittenByte(),this}writeInt32(t){return this.ensureAvailable(4),this._data.setInt32(this.offset,t,this.littleEndian),this.offset+=4,this._updateLastWrittenByte(),this}writeUint32(t){return this.ensureAvailable(4),this._data.setUint32(this.offset,t,this.littleEndian),this.offset+=4,this._updateLastWrittenByte(),this}writeFloat32(t){return this.ensureAvailable(4),this._data.setFloat32(this.offset,t,this.littleEndian),this.offset+=4,this._updateLastWrittenByte(),this}writeFloat64(t){return this.ensureAvailable(8),this._data.setFloat64(this.offset,t,this.littleEndian),this.offset+=8,this._updateLastWrittenByte(),this}writeBigInt64(t){return this.ensureAvailable(8),this._data.setBigInt64(this.offset,t,this.littleEndian),this.offset+=8,this._updateLastWrittenByte(),this}writeBigUint64(t){return this.ensureAvailable(8),this._data.setBigUint64(this.offset,t,this.littleEndian),this.offset+=8,this._updateLastWrittenByte(),this}writeChar(t){return this.writeUint8(t.charCodeAt(0))}writeChars(t){for(let e=0;e<t.length;e++)this.writeUint8(t.charCodeAt(e));return this}writeUtf8(t){return this.writeBytes(function(t){return u.encode(t)}(t))}toArray(){return new Uint8Array(this.buffer,this.byteOffset,this.lastWrittenByte)}getWrittenByteLength(){return this.lastWrittenByte-this.byteOffset}_updateLastWrittenByte(){this.offset>this.lastWrittenByte&&(this.lastWrittenByte=this.offset)}}const p={standard:f,exif:n,gps:o};class w{constructor(t){if(e(this,"kind"),e(this,"data"),e(this,"fields"),e(this,"exif"),e(this,"gps"),e(this,"_hasMap"),e(this,"_map"),!t)throw new Error("missing kind");this.data=new Uint8Array,this.fields=new Map,this.kind=t,this._hasMap=!1,this._map={}}get(t){if("number"==typeof t)return this.fields.get(t);if("string"==typeof t)return this.fields.get(p[this.kind].tagsByName[t]);throw new Error("expected a number or string")}get map(){if(!this._hasMap){const t=p[this.kind].tagsById;for(const e of this.fields.keys())t[e]&&(this._map[t[e]]=this.fields.get(e));this._hasMap=!0}return this._map}}const b=new Map([[1,[1,y]],[2,[1,function(t,e){const i=[];let r="";for(let n=0;n<e;n++){const e=String.fromCharCode(t.readUint8());"\0"===e?(i.push(r),r=""):r+=e}return 1===i.length?i[0]:i}]],[3,[2,function(t,e){if(1===e)return t.readUint16();const i=new Uint16Array(e);for(let r=0;r<e;r++)i[r]=t.readUint16();return i}]],[4,[4,function(t,e){if(1===e)return t.readUint32();const i=new Uint32Array(e);for(let r=0;r<e;r++)i[r]=t.readUint32();return i}]],[5,[8,function(t,e){if(1===e)return t.readUint32()/t.readUint32();const i=new Array(e);for(let r=0;r<e;r++)i[r]=t.readUint32()/t.readUint32();return i}]],[6,[1,function(t,e){if(1===e)return t.readInt8();const i=new Int8Array(e);for(let r=0;r<e;r++)i[r]=t.readInt8();return i}]],[7,[1,y]],[8,[2,function(t,e){if(1===e)return t.readInt16();const i=new Int16Array(e);for(let r=0;r<e;r++)i[r]=t.readInt16();return i}]],[9,[4,function(t,e){if(1===e)return t.readInt32();const i=new Int32Array(e);for(let r=0;r<e;r++)i[r]=t.readInt32();return i}]],[10,[8,function(t,e){if(1===e)return t.readInt32()/t.readInt32();const i=new Array(e);for(let r=0;r<e;r++)i[r]=t.readInt32()/t.readInt32();return i}]],[11,[4,function(t,e){if(1===e)return t.readFloat32();const i=new Float32Array(e);for(let r=0;r<e;r++)i[r]=t.readFloat32();return i}]],[12,[8,function(t,e){if(1===e)return t.readFloat64();const i=new Float64Array(e);for(let r=0;r<e;r++)i[r]=t.readFloat64();return i}]]]);function y(t,e){if(1===e)return t.readUint8();const i=new Uint8Array(e);for(let r=0;r<e;r++)i[r]=t.readUint8();return i}let k=[];const _=[511,1023,2047,4095],S=[0,0,0,0,0,0,0,0,0,511,1023,2047,4095];class x{constructor(t){e(this,"stripArray"),e(this,"nextData",0),e(this,"nextBits",0),e(this,"bytePointer",0),e(this,"tableLength",258),e(this,"currentBitLength",9),e(this,"outData"),this.stripArray=new Uint8Array(t.buffer,t.byteOffset,t.byteLength),this.outData=new m(t.byteLength),this.initializeTable()}decode(){let t=0,e=0;for(;257!==(t=this.getNextCode());)if(256===t){if(this.initializeTable(),t=this.getNextCode(),257===t)break;this.writeString(this.stringFromCode(t)),e=t}else if(this.isInTable(t))this.writeString(this.stringFromCode(t)),this.addStringToTable(this.stringFromCode(e).concat(this.stringFromCode(t)[0])),e=t;else{const i=this.stringFromCode(e).concat(this.stringFromCode(e)[0]);this.writeString(i),this.addStringToTable(i),e=t}const i=this.outData.toArray();return new DataView(i.buffer,i.byteOffset,i.byteLength)}initializeTable(){!function(){if(0===k.length){for(let e=0;e<256;e++)k.push([e]);const t=[];for(let e=256;e<4096;e++)k.push(t)}}(),this.tableLength=258,this.currentBitLength=9}writeString(t){this.outData.writeBytes(t)}stringFromCode(t){return k[t]}isInTable(t){return t<this.tableLength}addStringToTable(t){if(k[this.tableLength++]=t,k.length>4096)throw k=[],new Error("LZW decoding error. Please open an issue at https://github.com/image-js/tiff/issues/new/choose (include a test image).");this.tableLength===S[this.currentBitLength]&&this.currentBitLength++}getNextCode(){this.nextData=this.nextData<<8|255&this.stripArray[this.bytePointer++],this.nextBits+=8,this.nextBits<this.currentBitLength&&(this.nextData=this.nextData<<8|255&this.stripArray[this.bytePointer++],this.nextBits+=8);const t=this.nextData>>this.nextBits-this.currentBitLength&_[this.currentBitLength-9];return this.nextBits-=this.currentBitLength,this.bytePointer>this.stripArray.length?257:t}}const D=/^(\d{4}):(\d{2}):(\d{2}) (\d{2}):(\d{2}):(\d{2})$/;class A extends w{constructor(){super("standard")}get size(){return this.width*this.height}get width(){return this.imageWidth}get height(){return this.imageLength}get components(){return this.samplesPerPixel}get date(){const t=new Date,e=D.exec(this.dateTime);if(null===e)throw new Error(`invalid dateTime: ${this.dateTime}`);return t.setFullYear(Number(e[1]),Number(e[2])-1,Number(e[3])),t.setHours(Number(e[4]),Number(e[5]),Number(e[6])),t}get newSubfileType(){return this.get("NewSubfileType")}get imageWidth(){return this.get("ImageWidth")}get imageLength(){return this.get("ImageLength")}get bitsPerSample(){const t=this.get("BitsPerSample");return t&&"number"!=typeof t?t[0]:t}get alpha(){const t=this.extraSamples;return!!t&&0!==t[0]}get associatedAlpha(){const t=this.extraSamples;return!!t&&1===t[0]}get extraSamples(){return P(this.get("ExtraSamples"))}get compression(){return this.get("Compression")||1}get type(){return this.get("PhotometricInterpretation")}get fillOrder(){return this.get("FillOrder")||1}get documentName(){return this.get("DocumentName")}get imageDescription(){return this.get("ImageDescription")}get stripOffsets(){return P(this.get("StripOffsets"))}get orientation(){return this.get("Orientation")}get samplesPerPixel(){return this.get("SamplesPerPixel")||1}get rowsPerStrip(){return this.get("RowsPerStrip")}get stripByteCounts(){return P(this.get("StripByteCounts"))}get minSampleValue(){return this.get("MinSampleValue")||0}get maxSampleValue(){return this.get("MaxSampleValue")||2**this.bitsPerSample-1}get xResolution(){return this.get("XResolution")}get yResolution(){return this.get("YResolution")}get planarConfiguration(){return this.get("PlanarConfiguration")||1}get resolutionUnit(){return this.get("ResolutionUnit")||2}get dateTime(){return this.get("DateTime")}get predictor(){return this.get("Predictor")||1}get sampleFormat(){return P(this.get("SampleFormat")||1)[0]}get sMinSampleValue(){return this.get("SMinSampleValue")||this.minSampleValue}get sMaxSampleValue(){return this.get("SMaxSampleValue")||this.maxSampleValue}get palette(){const t=2**this.bitsPerSample,e=this.get("ColorMap");if(!e)return;if(e.length!==3*t)throw new Error(`ColorMap size must be ${t}`);const i=[];for(let r=0;r<t;r++)i.push([e[r],e[r+t],e[r+2*t]]);return i}get tileWidth(){return this.get("TileWidth")}get tileHeight(){return this.get("TileLength")}get tileOffsets(){return P(this.get("TileOffsets"))}get tileByteCounts(){return P(this.get("TileByteCounts"))}get tiled(){return void 0!==this.tileWidth&&void 0!==this.tileHeight&&void 0!==this.tileOffsets&&void 0!==this.tileByteCounts}}function P(t){return"number"==typeof t?[t]:t}function I(t){let e=t.length;for(;--e>=0;)t[e]=0}I(new Array(576));I(new Array(60));I(new Array(512));I(new Array(256));I(new Array(29));I(new Array(30));var v=(t,e,i,r)=>{let n=65535&t,s=t>>>16&65535,a=0;for(;0!==i;){a=i>2e3?2e3:i,i-=a;do{n=n+e[r++]|0,s=s+n|0}while(--a);n%=65521,s%=65521}return n|s<<16};const E=new Uint32Array((()=>{let t,e=[];for(var i=0;i<256;i++){t=i;for(var r=0;r<8;r++)t=1&t?3988292384^t>>>1:t>>>1;e[i]=t}return e})());var B=(t,e,i,r)=>{const n=E,s=r+i;t^=-1;for(let a=r;a<s;a++)t=t>>>8^n[255&(t^e[a])];return-1^t},C={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},T={Z_NO_FLUSH:0,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_DEFLATED:8};const F=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var U=function(t){const e=Array.prototype.slice.call(arguments,1);for(;e.length;){const i=e.shift();if(i){if("object"!=typeof i)throw new TypeError(i+"must be non-object");for(const e in i)F(i,e)&&(t[e]=i[e])}}return t},L=t=>{let e=0;for(let r=0,n=t.length;r<n;r++)e+=t[r].length;const i=new Uint8Array(e);for(let r=0,n=0,s=t.length;r<s;r++){let e=t[r];i.set(e,n),n+=e.length}return i};let R=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(Kt){R=!1}const M=new Uint8Array(256);for(let qt=0;qt<256;qt++)M[qt]=qt>=252?6:qt>=248?5:qt>=240?4:qt>=224?3:qt>=192?2:1;M[254]=M[254]=1;var O=t=>{if("function"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(t);let e,i,r,n,s,a=t.length,o=0;for(n=0;n<a;n++)i=t.charCodeAt(n),55296==(64512&i)&&n+1<a&&(r=t.charCodeAt(n+1),56320==(64512&r)&&(i=65536+(i-55296<<10)+(r-56320),n++)),o+=i<128?1:i<2048?2:i<65536?3:4;for(e=new Uint8Array(o),s=0,n=0;s<o;n++)i=t.charCodeAt(n),55296==(64512&i)&&n+1<a&&(r=t.charCodeAt(n+1),56320==(64512&r)&&(i=65536+(i-55296<<10)+(r-56320),n++)),i<128?e[s++]=i:i<2048?(e[s++]=192|i>>>6,e[s++]=128|63&i):i<65536?(e[s++]=224|i>>>12,e[s++]=128|i>>>6&63,e[s++]=128|63&i):(e[s++]=240|i>>>18,e[s++]=128|i>>>12&63,e[s++]=128|i>>>6&63,e[s++]=128|63&i);return e},G=(t,e)=>{const i=e||t.length;if("function"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(t.subarray(0,e));let r,n;const s=new Array(2*i);for(n=0,r=0;r<i;){let e=t[r++];if(e<128){s[n++]=e;continue}let a=M[e];if(a>4)s[n++]=65533,r+=a-1;else{for(e&=2===a?31:3===a?15:7;a>1&&r<i;)e=e<<6|63&t[r++],a--;a>1?s[n++]=65533:e<65536?s[n++]=e:(e-=65536,s[n++]=55296|e>>10&1023,s[n++]=56320|1023&e)}}return((t,e)=>{if(e<65534&&t.subarray&&R)return String.fromCharCode.apply(null,t.length===e?t:t.subarray(0,e));let i="";for(let r=0;r<e;r++)i+=String.fromCharCode(t[r]);return i})(s,n)},N=(t,e)=>{(e=e||t.length)>t.length&&(e=t.length);let i=e-1;for(;i>=0&&128==(192&t[i]);)i--;return i<0||0===i?e:i+M[t[i]]>e?i:e};var W=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0};const V=16209;var z=function(t,e){let i,r,n,s,a,o,l,h,f,d,u,c,g,m,p,w,b,y,k,_,S,x,D,A;const P=t.state;i=t.next_in,D=t.input,r=i+(t.avail_in-5),n=t.next_out,A=t.output,s=n-(e-t.avail_out),a=n+(t.avail_out-257),o=P.dmax,l=P.wsize,h=P.whave,f=P.wnext,d=P.window,u=P.hold,c=P.bits,g=P.lencode,m=P.distcode,p=(1<<P.lenbits)-1,w=(1<<P.distbits)-1;t:do{c<15&&(u+=D[i++]<<c,c+=8,u+=D[i++]<<c,c+=8),b=g[u&p];e:for(;;){if(y=b>>>24,u>>>=y,c-=y,y=b>>>16&255,0===y)A[n++]=65535&b;else{if(!(16&y)){if(64&y){if(32&y){P.mode=16191;break t}t.msg="invalid literal/length code",P.mode=V;break t}b=g[(65535&b)+(u&(1<<y)-1)];continue e}for(k=65535&b,y&=15,y&&(c<y&&(u+=D[i++]<<c,c+=8),k+=u&(1<<y)-1,u>>>=y,c-=y),c<15&&(u+=D[i++]<<c,c+=8,u+=D[i++]<<c,c+=8),b=m[u&w];;){if(y=b>>>24,u>>>=y,c-=y,y=b>>>16&255,16&y){if(_=65535&b,y&=15,c<y&&(u+=D[i++]<<c,c+=8,c<y&&(u+=D[i++]<<c,c+=8)),_+=u&(1<<y)-1,_>o){t.msg="invalid distance too far back",P.mode=V;break t}if(u>>>=y,c-=y,y=n-s,_>y){if(y=_-y,y>h&&P.sane){t.msg="invalid distance too far back",P.mode=V;break t}if(S=0,x=d,0===f){if(S+=l-y,y<k){k-=y;do{A[n++]=d[S++]}while(--y);S=n-_,x=A}}else if(f<y){if(S+=l+f-y,y-=f,y<k){k-=y;do{A[n++]=d[S++]}while(--y);if(S=0,f<k){y=f,k-=y;do{A[n++]=d[S++]}while(--y);S=n-_,x=A}}}else if(S+=f-y,y<k){k-=y;do{A[n++]=d[S++]}while(--y);S=n-_,x=A}for(;k>2;)A[n++]=x[S++],A[n++]=x[S++],A[n++]=x[S++],k-=3;k&&(A[n++]=x[S++],k>1&&(A[n++]=x[S++]))}else{S=n-_;do{A[n++]=A[S++],A[n++]=A[S++],A[n++]=A[S++],k-=3}while(k>2);k&&(A[n++]=A[S++],k>1&&(A[n++]=A[S++]))}break}if(64&y){t.msg="invalid distance code",P.mode=V;break t}b=m[(65535&b)+(u&(1<<y)-1)]}}break}}while(i<r&&n<a);k=c>>3,i-=k,c-=k<<3,u&=(1<<c)-1,t.next_in=i,t.next_out=n,t.avail_in=i<r?r-i+5:5-(i-r),t.avail_out=n<a?a-n+257:257-(n-a),P.hold=u,P.bits=c};const Z=15,H=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),j=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),$=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),Y=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var X=(t,e,i,r,n,s,a,o)=>{const l=o.bits;let h,f,d,u,c,g,m=0,p=0,w=0,b=0,y=0,k=0,_=0,S=0,x=0,D=0,A=null;const P=new Uint16Array(16),I=new Uint16Array(16);let v,E,B,C=null;for(m=0;m<=Z;m++)P[m]=0;for(p=0;p<r;p++)P[e[i+p]]++;for(y=l,b=Z;b>=1&&0===P[b];b--);if(y>b&&(y=b),0===b)return n[s++]=20971520,n[s++]=20971520,o.bits=1,0;for(w=1;w<b&&0===P[w];w++);for(y<w&&(y=w),S=1,m=1;m<=Z;m++)if(S<<=1,S-=P[m],S<0)return-1;if(S>0&&(0===t||1!==b))return-1;for(I[1]=0,m=1;m<Z;m++)I[m+1]=I[m]+P[m];for(p=0;p<r;p++)0!==e[i+p]&&(a[I[e[i+p]]++]=p);if(0===t?(A=C=a,g=20):1===t?(A=H,C=j,g=257):(A=$,C=Y,g=0),D=0,p=0,m=w,c=s,k=y,_=0,d=-1,x=1<<y,u=x-1,1===t&&x>852||2===t&&x>592)return 1;for(;;){v=m-_,a[p]+1<g?(E=0,B=a[p]):a[p]>=g?(E=C[a[p]-g],B=A[a[p]-g]):(E=96,B=0),h=1<<m-_,f=1<<k,w=f;do{f-=h,n[c+(D>>_)+f]=v<<24|E<<16|B}while(0!==f);for(h=1<<m-1;D&h;)h>>=1;if(0!==h?(D&=h-1,D+=h):D=0,p++,0===--P[m]){if(m===b)break;m=e[i+a[p]]}if(m>y&&(D&u)!==d){for(0===_&&(_=y),c+=w,k=m-_,S=1<<k;k+_<b&&(S-=P[k+_],!(S<=0));)k++,S<<=1;if(x+=1<<k,1===t&&x>852||2===t&&x>592)return 1;d=D&u,n[d]=y<<24|k<<16|c-s}}return 0!==D&&(n[c+D]=m-_<<24|64<<16),o.bits=y,0};const{Z_FINISH:J,Z_BLOCK:K,Z_TREES:q,Z_OK:Q,Z_STREAM_END:tt,Z_NEED_DICT:et,Z_STREAM_ERROR:it,Z_DATA_ERROR:rt,Z_MEM_ERROR:nt,Z_BUF_ERROR:st,Z_DEFLATED:at}=T,ot=16180,lt=16190,ht=16191,ft=16192,dt=16194,ut=16199,ct=16200,gt=16206,mt=16209,pt=t=>(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24);function wt(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const bt=t=>{if(!t)return 1;const e=t.state;return!e||e.strm!==t||e.mode<ot||e.mode>16211?1:0},yt=t=>{if(bt(t))return it;const e=t.state;return t.total_in=t.total_out=e.total=0,t.msg="",e.wrap&&(t.adler=1&e.wrap),e.mode=ot,e.last=0,e.havedict=0,e.flags=-1,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new Int32Array(852),e.distcode=e.distdyn=new Int32Array(592),e.sane=1,e.back=-1,Q},kt=t=>{if(bt(t))return it;const e=t.state;return e.wsize=0,e.whave=0,e.wnext=0,yt(t)},_t=(t,e)=>{let i;if(bt(t))return it;const r=t.state;return e<0?(i=0,e=-e):(i=5+(e>>4),e<48&&(e&=15)),e&&(e<8||e>15)?it:(null!==r.window&&r.wbits!==e&&(r.window=null),r.wrap=i,r.wbits=e,kt(t))},St=(t,e)=>{if(!t)return it;const i=new wt;t.state=i,i.strm=t,i.window=null,i.mode=ot;const r=_t(t,e);return r!==Q&&(t.state=null),r};let xt,Dt,At=!0;const Pt=t=>{if(At){xt=new Int32Array(512),Dt=new Int32Array(32);let e=0;for(;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(X(1,t.lens,0,288,xt,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;X(2,t.lens,0,32,Dt,0,t.work,{bits:5}),At=!1}t.lencode=xt,t.lenbits=9,t.distcode=Dt,t.distbits=5},It=(t,e,i,r)=>{let n;const s=t.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new Uint8Array(s.wsize)),r>=s.wsize?(s.window.set(e.subarray(i-s.wsize,i),0),s.wnext=0,s.whave=s.wsize):(n=s.wsize-s.wnext,n>r&&(n=r),s.window.set(e.subarray(i-r,i-r+n),s.wnext),(r-=n)?(s.window.set(e.subarray(i-r,i),0),s.wnext=r,s.whave=s.wsize):(s.wnext+=n,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=n))),0};var vt={inflateReset:kt,inflateReset2:_t,inflateResetKeep:yt,inflateInit:t=>St(t,15),inflateInit2:St,inflate:(t,e)=>{let i,r,n,s,a,o,l,h,f,d,u,c,g,m,p,w,b,y,k,_,S,x,D=0;const A=new Uint8Array(4);let P,I;const E=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(bt(t)||!t.output||!t.input&&0!==t.avail_in)return it;i=t.state,i.mode===ht&&(i.mode=ft),a=t.next_out,n=t.output,l=t.avail_out,s=t.next_in,r=t.input,o=t.avail_in,h=i.hold,f=i.bits,d=o,u=l,x=Q;t:for(;;)switch(i.mode){case ot:if(0===i.wrap){i.mode=ft;break}for(;f<16;){if(0===o)break t;o--,h+=r[s++]<<f,f+=8}if(2&i.wrap&&35615===h){0===i.wbits&&(i.wbits=15),i.check=0,A[0]=255&h,A[1]=h>>>8&255,i.check=B(i.check,A,2,0),h=0,f=0,i.mode=16181;break}if(i.head&&(i.head.done=!1),!(1&i.wrap)||(((255&h)<<8)+(h>>8))%31){t.msg="incorrect header check",i.mode=mt;break}if((15&h)!==at){t.msg="unknown compression method",i.mode=mt;break}if(h>>>=4,f-=4,S=8+(15&h),0===i.wbits&&(i.wbits=S),S>15||S>i.wbits){t.msg="invalid window size",i.mode=mt;break}i.dmax=1<<i.wbits,i.flags=0,t.adler=i.check=1,i.mode=512&h?16189:ht,h=0,f=0;break;case 16181:for(;f<16;){if(0===o)break t;o--,h+=r[s++]<<f,f+=8}if(i.flags=h,(255&i.flags)!==at){t.msg="unknown compression method",i.mode=mt;break}if(57344&i.flags){t.msg="unknown header flags set",i.mode=mt;break}i.head&&(i.head.text=h>>8&1),512&i.flags&&4&i.wrap&&(A[0]=255&h,A[1]=h>>>8&255,i.check=B(i.check,A,2,0)),h=0,f=0,i.mode=16182;case 16182:for(;f<32;){if(0===o)break t;o--,h+=r[s++]<<f,f+=8}i.head&&(i.head.time=h),512&i.flags&&4&i.wrap&&(A[0]=255&h,A[1]=h>>>8&255,A[2]=h>>>16&255,A[3]=h>>>24&255,i.check=B(i.check,A,4,0)),h=0,f=0,i.mode=16183;case 16183:for(;f<16;){if(0===o)break t;o--,h+=r[s++]<<f,f+=8}i.head&&(i.head.xflags=255&h,i.head.os=h>>8),512&i.flags&&4&i.wrap&&(A[0]=255&h,A[1]=h>>>8&255,i.check=B(i.check,A,2,0)),h=0,f=0,i.mode=16184;case 16184:if(1024&i.flags){for(;f<16;){if(0===o)break t;o--,h+=r[s++]<<f,f+=8}i.length=h,i.head&&(i.head.extra_len=h),512&i.flags&&4&i.wrap&&(A[0]=255&h,A[1]=h>>>8&255,i.check=B(i.check,A,2,0)),h=0,f=0}else i.head&&(i.head.extra=null);i.mode=16185;case 16185:if(1024&i.flags&&(c=i.length,c>o&&(c=o),c&&(i.head&&(S=i.head.extra_len-i.length,i.head.extra||(i.head.extra=new Uint8Array(i.head.extra_len)),i.head.extra.set(r.subarray(s,s+c),S)),512&i.flags&&4&i.wrap&&(i.check=B(i.check,r,c,s)),o-=c,s+=c,i.length-=c),i.length))break t;i.length=0,i.mode=16186;case 16186:if(2048&i.flags){if(0===o)break t;c=0;do{S=r[s+c++],i.head&&S&&i.length<65536&&(i.head.name+=String.fromCharCode(S))}while(S&&c<o);if(512&i.flags&&4&i.wrap&&(i.check=B(i.check,r,c,s)),o-=c,s+=c,S)break t}else i.head&&(i.head.name=null);i.length=0,i.mode=16187;case 16187:if(4096&i.flags){if(0===o)break t;c=0;do{S=r[s+c++],i.head&&S&&i.length<65536&&(i.head.comment+=String.fromCharCode(S))}while(S&&c<o);if(512&i.flags&&4&i.wrap&&(i.check=B(i.check,r,c,s)),o-=c,s+=c,S)break t}else i.head&&(i.head.comment=null);i.mode=16188;case 16188:if(512&i.flags){for(;f<16;){if(0===o)break t;o--,h+=r[s++]<<f,f+=8}if(4&i.wrap&&h!==(65535&i.check)){t.msg="header crc mismatch",i.mode=mt;break}h=0,f=0}i.head&&(i.head.hcrc=i.flags>>9&1,i.head.done=!0),t.adler=i.check=0,i.mode=ht;break;case 16189:for(;f<32;){if(0===o)break t;o--,h+=r[s++]<<f,f+=8}t.adler=i.check=pt(h),h=0,f=0,i.mode=lt;case lt:if(0===i.havedict)return t.next_out=a,t.avail_out=l,t.next_in=s,t.avail_in=o,i.hold=h,i.bits=f,et;t.adler=i.check=1,i.mode=ht;case ht:if(e===K||e===q)break t;case ft:if(i.last){h>>>=7&f,f-=7&f,i.mode=gt;break}for(;f<3;){if(0===o)break t;o--,h+=r[s++]<<f,f+=8}switch(i.last=1&h,h>>>=1,f-=1,3&h){case 0:i.mode=16193;break;case 1:if(Pt(i),i.mode=ut,e===q){h>>>=2,f-=2;break t}break;case 2:i.mode=16196;break;case 3:t.msg="invalid block type",i.mode=mt}h>>>=2,f-=2;break;case 16193:for(h>>>=7&f,f-=7&f;f<32;){if(0===o)break t;o--,h+=r[s++]<<f,f+=8}if((65535&h)!=(h>>>16^65535)){t.msg="invalid stored block lengths",i.mode=mt;break}if(i.length=65535&h,h=0,f=0,i.mode=dt,e===q)break t;case dt:i.mode=16195;case 16195:if(c=i.length,c){if(c>o&&(c=o),c>l&&(c=l),0===c)break t;n.set(r.subarray(s,s+c),a),o-=c,s+=c,l-=c,a+=c,i.length-=c;break}i.mode=ht;break;case 16196:for(;f<14;){if(0===o)break t;o--,h+=r[s++]<<f,f+=8}if(i.nlen=257+(31&h),h>>>=5,f-=5,i.ndist=1+(31&h),h>>>=5,f-=5,i.ncode=4+(15&h),h>>>=4,f-=4,i.nlen>286||i.ndist>30){t.msg="too many length or distance symbols",i.mode=mt;break}i.have=0,i.mode=16197;case 16197:for(;i.have<i.ncode;){for(;f<3;){if(0===o)break t;o--,h+=r[s++]<<f,f+=8}i.lens[E[i.have++]]=7&h,h>>>=3,f-=3}for(;i.have<19;)i.lens[E[i.have++]]=0;if(i.lencode=i.lendyn,i.lenbits=7,P={bits:i.lenbits},x=X(0,i.lens,0,19,i.lencode,0,i.work,P),i.lenbits=P.bits,x){t.msg="invalid code lengths set",i.mode=mt;break}i.have=0,i.mode=16198;case 16198:for(;i.have<i.nlen+i.ndist;){for(;D=i.lencode[h&(1<<i.lenbits)-1],p=D>>>24,w=D>>>16&255,b=65535&D,!(p<=f);){if(0===o)break t;o--,h+=r[s++]<<f,f+=8}if(b<16)h>>>=p,f-=p,i.lens[i.have++]=b;else{if(16===b){for(I=p+2;f<I;){if(0===o)break t;o--,h+=r[s++]<<f,f+=8}if(h>>>=p,f-=p,0===i.have){t.msg="invalid bit length repeat",i.mode=mt;break}S=i.lens[i.have-1],c=3+(3&h),h>>>=2,f-=2}else if(17===b){for(I=p+3;f<I;){if(0===o)break t;o--,h+=r[s++]<<f,f+=8}h>>>=p,f-=p,S=0,c=3+(7&h),h>>>=3,f-=3}else{for(I=p+7;f<I;){if(0===o)break t;o--,h+=r[s++]<<f,f+=8}h>>>=p,f-=p,S=0,c=11+(127&h),h>>>=7,f-=7}if(i.have+c>i.nlen+i.ndist){t.msg="invalid bit length repeat",i.mode=mt;break}for(;c--;)i.lens[i.have++]=S}}if(i.mode===mt)break;if(0===i.lens[256]){t.msg="invalid code -- missing end-of-block",i.mode=mt;break}if(i.lenbits=9,P={bits:i.lenbits},x=X(1,i.lens,0,i.nlen,i.lencode,0,i.work,P),i.lenbits=P.bits,x){t.msg="invalid literal/lengths set",i.mode=mt;break}if(i.distbits=6,i.distcode=i.distdyn,P={bits:i.distbits},x=X(2,i.lens,i.nlen,i.ndist,i.distcode,0,i.work,P),i.distbits=P.bits,x){t.msg="invalid distances set",i.mode=mt;break}if(i.mode=ut,e===q)break t;case ut:i.mode=ct;case ct:if(o>=6&&l>=258){t.next_out=a,t.avail_out=l,t.next_in=s,t.avail_in=o,i.hold=h,i.bits=f,z(t,u),a=t.next_out,n=t.output,l=t.avail_out,s=t.next_in,r=t.input,o=t.avail_in,h=i.hold,f=i.bits,i.mode===ht&&(i.back=-1);break}for(i.back=0;D=i.lencode[h&(1<<i.lenbits)-1],p=D>>>24,w=D>>>16&255,b=65535&D,!(p<=f);){if(0===o)break t;o--,h+=r[s++]<<f,f+=8}if(w&&!(240&w)){for(y=p,k=w,_=b;D=i.lencode[_+((h&(1<<y+k)-1)>>y)],p=D>>>24,w=D>>>16&255,b=65535&D,!(y+p<=f);){if(0===o)break t;o--,h+=r[s++]<<f,f+=8}h>>>=y,f-=y,i.back+=y}if(h>>>=p,f-=p,i.back+=p,i.length=b,0===w){i.mode=16205;break}if(32&w){i.back=-1,i.mode=ht;break}if(64&w){t.msg="invalid literal/length code",i.mode=mt;break}i.extra=15&w,i.mode=16201;case 16201:if(i.extra){for(I=i.extra;f<I;){if(0===o)break t;o--,h+=r[s++]<<f,f+=8}i.length+=h&(1<<i.extra)-1,h>>>=i.extra,f-=i.extra,i.back+=i.extra}i.was=i.length,i.mode=16202;case 16202:for(;D=i.distcode[h&(1<<i.distbits)-1],p=D>>>24,w=D>>>16&255,b=65535&D,!(p<=f);){if(0===o)break t;o--,h+=r[s++]<<f,f+=8}if(!(240&w)){for(y=p,k=w,_=b;D=i.distcode[_+((h&(1<<y+k)-1)>>y)],p=D>>>24,w=D>>>16&255,b=65535&D,!(y+p<=f);){if(0===o)break t;o--,h+=r[s++]<<f,f+=8}h>>>=y,f-=y,i.back+=y}if(h>>>=p,f-=p,i.back+=p,64&w){t.msg="invalid distance code",i.mode=mt;break}i.offset=b,i.extra=15&w,i.mode=16203;case 16203:if(i.extra){for(I=i.extra;f<I;){if(0===o)break t;o--,h+=r[s++]<<f,f+=8}i.offset+=h&(1<<i.extra)-1,h>>>=i.extra,f-=i.extra,i.back+=i.extra}if(i.offset>i.dmax){t.msg="invalid distance too far back",i.mode=mt;break}i.mode=16204;case 16204:if(0===l)break t;if(c=u-l,i.offset>c){if(c=i.offset-c,c>i.whave&&i.sane){t.msg="invalid distance too far back",i.mode=mt;break}c>i.wnext?(c-=i.wnext,g=i.wsize-c):g=i.wnext-c,c>i.length&&(c=i.length),m=i.window}else m=n,g=a-i.offset,c=i.length;c>l&&(c=l),l-=c,i.length-=c;do{n[a++]=m[g++]}while(--c);0===i.length&&(i.mode=ct);break;case 16205:if(0===l)break t;n[a++]=i.length,l--,i.mode=ct;break;case gt:if(i.wrap){for(;f<32;){if(0===o)break t;o--,h|=r[s++]<<f,f+=8}if(u-=l,t.total_out+=u,i.total+=u,4&i.wrap&&u&&(t.adler=i.check=i.flags?B(i.check,n,u,a-u):v(i.check,n,u,a-u)),u=l,4&i.wrap&&(i.flags?h:pt(h))!==i.check){t.msg="incorrect data check",i.mode=mt;break}h=0,f=0}i.mode=16207;case 16207:if(i.wrap&&i.flags){for(;f<32;){if(0===o)break t;o--,h+=r[s++]<<f,f+=8}if(4&i.wrap&&h!==(4294967295&i.total)){t.msg="incorrect length check",i.mode=mt;break}h=0,f=0}i.mode=16208;case 16208:x=tt;break t;case mt:x=rt;break t;case 16210:return nt;default:return it}return t.next_out=a,t.avail_out=l,t.next_in=s,t.avail_in=o,i.hold=h,i.bits=f,(i.wsize||u!==t.avail_out&&i.mode<mt&&(i.mode<gt||e!==J))&&It(t,t.output,t.next_out,u-t.avail_out),d-=t.avail_in,u-=t.avail_out,t.total_in+=d,t.total_out+=u,i.total+=u,4&i.wrap&&u&&(t.adler=i.check=i.flags?B(i.check,n,u,t.next_out-u):v(i.check,n,u,t.next_out-u)),t.data_type=i.bits+(i.last?64:0)+(i.mode===ht?128:0)+(i.mode===ut||i.mode===dt?256:0),(0===d&&0===u||e===J)&&x===Q&&(x=st),x},inflateEnd:t=>{if(bt(t))return it;let e=t.state;return e.window&&(e.window=null),t.state=null,Q},inflateGetHeader:(t,e)=>{if(bt(t))return it;const i=t.state;return 2&i.wrap?(i.head=e,e.done=!1,Q):it},inflateSetDictionary:(t,e)=>{const i=e.length;let r,n,s;return bt(t)?it:(r=t.state,0!==r.wrap&&r.mode!==lt?it:r.mode===lt&&(n=1,n=v(n,e,i,0),n!==r.check)?rt:(s=It(t,e,i,i),s?(r.mode=16210,nt):(r.havedict=1,Q)))},inflateInfo:"pako inflate (from Nodeca project)"};var Et=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1};const Bt=Object.prototype.toString,{Z_NO_FLUSH:Ct,Z_FINISH:Tt,Z_OK:Ft,Z_STREAM_END:Ut,Z_NEED_DICT:Lt,Z_STREAM_ERROR:Rt,Z_DATA_ERROR:Mt,Z_MEM_ERROR:Ot}=T;function Gt(t){this.options=U({chunkSize:65536,windowBits:15,to:""},t||{});const e=this.options;e.raw&&e.windowBits>=0&&e.windowBits<16&&(e.windowBits=-e.windowBits,0===e.windowBits&&(e.windowBits=-15)),!(e.windowBits>=0&&e.windowBits<16)||t&&t.windowBits||(e.windowBits+=32),e.windowBits>15&&e.windowBits<48&&(15&e.windowBits||(e.windowBits|=15)),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new W,this.strm.avail_out=0;let i=vt.inflateInit2(this.strm,e.windowBits);if(i!==Ft)throw new Error(C[i]);if(this.header=new Et,vt.inflateGetHeader(this.strm,this.header),e.dictionary&&("string"==typeof e.dictionary?e.dictionary=O(e.dictionary):"[object ArrayBuffer]"===Bt.call(e.dictionary)&&(e.dictionary=new Uint8Array(e.dictionary)),e.raw&&(i=vt.inflateSetDictionary(this.strm,e.dictionary),i!==Ft)))throw new Error(C[i])}Gt.prototype.push=function(t,e){const i=this.strm,r=this.options.chunkSize,n=this.options.dictionary;let s,a,o;if(this.ended)return!1;for(a=e===~~e?e:!0===e?Tt:Ct,"[object ArrayBuffer]"===Bt.call(t)?i.input=new Uint8Array(t):i.input=t,i.next_in=0,i.avail_in=i.input.length;;){for(0===i.avail_out&&(i.output=new Uint8Array(r),i.next_out=0,i.avail_out=r),s=vt.inflate(i,a),s===Lt&&n&&(s=vt.inflateSetDictionary(i,n),s===Ft?s=vt.inflate(i,a):s===Mt&&(s=Lt));i.avail_in>0&&s===Ut&&i.state.wrap>0&&0!==t[i.next_in];)vt.inflateReset(i),s=vt.inflate(i,a);switch(s){case Rt:case Mt:case Lt:case Ot:return this.onEnd(s),this.ended=!0,!1}if(o=i.avail_out,i.next_out&&(0===i.avail_out||s===Ut))if("string"===this.options.to){let t=N(i.output,i.next_out),e=i.next_out-t,n=G(i.output,t);i.next_out=e,i.avail_out=r-e,e&&i.output.set(i.output.subarray(t,t+e),0),this.onData(n)}else this.onData(i.output.length===i.next_out?i.output:i.output.subarray(0,i.next_out));if(s!==Ft||0!==o){if(s===Ut)return s=vt.inflateEnd(this.strm),this.onEnd(s),this.ended=!0,!0;if(0===i.avail_in)break}}return!0},Gt.prototype.onData=function(t){this.chunks.push(t)},Gt.prototype.onEnd=function(t){t===Ft&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=L(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};var Nt={inflate:function(t,e){const i=new Gt(e);if(i.push(t),i.err)throw i.msg||C[i.err];return i.result}};const{inflate:Wt}=Nt;var Vt=Wt;const zt={ignoreImageData:!1};class Zt extends m{constructor(t){super(t),e(this,"_nextIFD"),this._nextIFD=0}get isMultiPage(){let t=0;for(this.decodeHeader();this._nextIFD;)if(t++,this.decodeIFD({ignoreImageData:!0},!0),2===t)return!0;if(1===t)return!1;throw jt("ifdCount",t)}get pageCount(){let t=0;for(this.decodeHeader();this._nextIFD;)t++,this.decodeIFD({ignoreImageData:!0},!0);if(t>0)return t;throw jt("ifdCount",t)}decode(t={}){const{pages:e}=t;!function(t){if(t)for(const e of t)if(e<0||!Number.isInteger(e))throw new RangeError(`Index ${e} is invalid. Must be a positive integer.`)}(e);const i=e?Math.max(...e):1/0;t={...zt,...t};const r=[];this.decodeHeader();let n=0;for(;this._nextIFD;){if(e){if(e.includes(n)?r.push(this.decodeIFD(t,!0)):this.decodeIFD({ignoreImageData:!0},!0),n===i)break}else r.push(this.decodeIFD(t,!0));n++}if(n<i&&i!==1/0)throw new RangeError(`Index ${i} is out of bounds. The stack only contains ${n} images.`);return r}decodeHeader(){const t=this.readUint16();if(18761===t)this.setLittleEndian();else{if(19789!==t)throw new Error(`invalid byte order: 0x${t.toString(16)}`);this.setBigEndian()}if(42!==this.readUint16())throw new Error("not a TIFF file");this._nextIFD=this.readUint32()}decodeIFD(t,e){let i;if(this.seek(this._nextIFD),e)i=new A;else{if(!t.kind)throw new Error("kind is missing");i=new w(t.kind)}const r=this.readUint16();for(let n=0;n<r;n++)this.decodeIFDEntry(i);if(!t.ignoreImageData){if(!(i instanceof A))throw new Error("must be a tiff ifd");this.decodeImageData(i)}return this._nextIFD=this.readUint32(),i}decodeIFDEntry(t){const e=this.offset,i=this.readUint16(),r=this.readUint16(),n=this.readUint32();if(r<1||r>12)return void this.skip(4);const s=function(t,e){const i=b.get(t);if(!i)throw new Error(`type not found: ${t}`);return i[0]*e}(r,n);s>4&&this.seek(this.readUint32());const a=function(t,e,i){const r=b.get(e);if(!r)throw new Error(`type not found: ${e}`);return r[1](t,i)}(this,r,n);if(t.fields.set(i,a),34665===i||34853===i){const e=this.offset;let r="exif";34665===i?r="exif":34853===i&&(r="gps"),this._nextIFD=a,t[r]=this.decodeIFD({kind:r,ignoreImageData:!0},!1),this.offset=e}this.seek(e),this.skip(12)}decodeImageData(t){const e=t.orientation;if(e&&1!==e)throw jt("orientation",e);switch(t.type){case 0:case 1:case 2:case 3:t.tiled?this.readTileData(t):this.readStripData(t);break;default:throw jt("image type",t.type)}if(this.applyPredictor(t),this.convertAlpha(t),0===t.type){const e=2**t.bitsPerSample-1;for(let i=0;i<t.data.length;i++)t.data[i]=e-t.data[i]}}static uncompress(t,e=1){switch(e){case 1:return t;case 5:return new x(t).decode();case 8:case 32946:return function(t){const e=new Uint8Array(t.buffer,t.byteOffset,t.byteLength),i=Vt(e);return new DataView(i.buffer,i.byteOffset,i.byteLength)}(t);case 2:throw jt("Compression","CCITT Group 3");case 32773:throw jt("Compression","PackBits");default:throw jt("Compression",e)}}readStripData(t){const e=t.width,i=e*t.height*t.samplesPerPixel,r=t.stripOffsets,n=t.stripByteCounts||function(t){if(1!==t.compression)throw new Error("missing mandatory StripByteCounts field in compressed image");const e=t.rowsPerStrip*t.width*t.samplesPerPixel*(t.bitsPerSample/8);return new Array(t.stripOffsets.length).fill(e)}(t),s=this.isLittleEndian(),a=e*t.rowsPerStrip*t.samplesPerPixel,o=Ht(i,t.bitsPerSample,t.sampleFormat);let l=0;for(let h=0;h<r.length;h++){const e=new DataView(this.buffer,this.byteOffset+r[h],n[h]),f=Zt.uncompress(e,t.compression),d=Math.min(a,i-l);for(let i=0;i<d;++i){const e=this.sampleValue(f,i,t.sampleFormat,t.bitsPerSample,s);o[l+i]=e}l+=d}t.data=o}readTileData(t){if(!t.tileWidth||!t.tileHeight)return;const e=t.width,i=t.height,r=e*i*t.samplesPerPixel,n=t.tileWidth,s=t.tileHeight,a=Math.floor((e+n-1)/n),o=Math.floor((i+s-1)/s),l=t.tileOffsets,h=t.tileByteCounts,f=this.isLittleEndian(),d=Ht(r,t.bitsPerSample,t.sampleFormat);for(let u=0;u<a;++u)for(let r=0;r<o;++r){const o=r*a+u,c=new DataView(this.buffer,l[o],h[o]),g=Zt.uncompress(c,t.compression);for(let a=0;a<n;++a)for(let o=0;o<s;++o){const l=u*n+a,h=r*s+o;if(l>=e)continue;if(h>=i)continue;const c=o*n+a,m=this.sampleValue(g,c,t.sampleFormat,t.bitsPerSample,f);d[h*e+l]=m}}t.data=d}
//! sampleValue retrieves a single, typed value
//! from a DataView while considering the format,
//! bitDepth and endianness.
//!
//! As this is called once per iteration, it would make
//! sense to convert this to a switch or if statement
//! over an enumerator instead of a parameter.
//!
sampleValue(t,e,i,r,n){if(8===r)return t.getUint8(e);if(16===r)return t.getUint16(2*e,n);if(32===r&&3===i)return t.getFloat32(4*e,n);if(64===r&&3===i)return t.getFloat64(8*e,n);throw jt("bitDepth",r)}applyPredictor(t){const e=t.bitsPerSample;switch(t.predictor){case 1:break;case 2:if(8===e)!function(t,e,i){let r=0;for(;r<t.length;){for(let n=i;n<e*i;n+=i)for(let e=0;e<i;e++)t[r+n+e]=t[r+n+e]+t[r+n-(i-e)]&255;r+=e*i}}(t.data,t.width,t.components);else{if(16!==e)throw new Error(`Horizontal differencing is only supported for images with a bit depth of ${e}`);!function(t,e,i){let r=0;for(;r<t.length;){for(let n=i;n<e*i;n+=i)for(let e=0;e<i;e++)t[r+n+e]=t[r+n+e]+t[r+n-(i-e)]&65535;r+=e*i}}(t.data,t.width,t.components)}break;default:throw new Error(`invalid predictor: ${t.predictor}`)}}convertAlpha(t){if(t.alpha&&t.associatedAlpha){const{data:e,components:i,maxSampleValue:r}=t;for(let t=0;t<e.length;t+=i){const n=e[t+i-1];for(let s=0;s<i-1;s++)e[t+s]=Math.round(e[t+s]*r/n)}}}}function Ht(t,e,i){if(8===e)return new Uint8Array(t);if(16===e)return new Uint16Array(t);if(32===e&&3===i)return new Float32Array(t);if(64===e&&3===i)return new Float64Array(t);throw jt("bit depth / sample format",`${e} / ${i}`)}function jt(t,e){return new Error(`Unsupported ${t}: ${e}`)}function $t(t,e){return new Zt(t).decode(e)}function Yt(t){return new Zt(t).isMultiPage}function Xt(t){return new Zt(t).pageCount}const Jt={exif:i,gps:s,standard:l};export{A as TiffIfd,$t as decode,Yt as isMultiPage,Xt as pageCount,Jt as tagNames};
